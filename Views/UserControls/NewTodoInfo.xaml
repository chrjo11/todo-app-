<UserControl x:Class="TodoApp.MVVM.Views.UserControls.NewTodoInfo"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TodoApp.MVVM.Views.UserControls"
             xmlns:controls="clr-namespace:TodoApp.MVVM.Controls"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             mc:Ignorable="d" 
             Background="{DynamicResource MaterialDesignPaper}"
             d:DesignHeight="300" d:DesignWidth="300">

    <!--vorher: <UserControl.Resources>
        <Style  x:Key="ButtonStyle1"
                ... >
        </Style>
    </UserControl.Resources>-->

    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Label Content="Schreibe ein neues Todo."
               Grid.Row="0"
               Width="150"
               FontWeight="Medium"
               FontSize="12"
               Margin="0,5,0,2" />
        <controls:CustomTextBox
                 Text="{Binding TodoItemText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                 Grid.Row="1"
                 Width="150"
                 Height="25"
                 Margin="0,0,0,5"/>
        <TextBlock Visibility="{Binding HasErrors}"
                   Text="{Binding Error}"
                   Foreground="Red"
                   HorizontalAlignment="Center"
                   Grid.Row="2"/>
        <Label Content="Wähle ein Tag aus."
               Grid.Row="3"
               Width="150"
               FontWeight="Medium"
               FontSize="12"
               Margin="0,5,0,2" />
        <ComboBox   FontSize="12"
                    Grid.Row="4"
                    SelectedIndex="0"
                    HorizontalAlignment="Center"
                    SelectedItem="{Binding SelectedTag, Mode=TwoWay}"
                    ItemsSource="{Binding Tags}"
                    MinWidth="150"
                    Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                    materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource SecondaryAccentBrush}"
                    materialDesign:ColorZoneAssist.Mode="Inverted">
            <ComboBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </ComboBox.ItemsPanel>
        </ComboBox>

        <!-- Text wird gebunden, TwoWay bedeutet, dass in beide Richtungen aktualisiert wird (Quelle&Ziel)
                         und UpdateSourceTrigger: bei jeder Eigenschaftänderung soll das Ziel geändert werden-->
        <Label Content="Wähle die Priorität aus."
               Grid.Row="5"
               Width="150"
               FontWeight="Medium"
               FontSize="12"
               Margin="0,15,0,2"/>
        <materialDesign:RatingBar Value="{Binding Priority, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Grid.Row="6"
                                  HorizontalAlignment="Center"
                                  Margin="0,5,0,2"/>
        <controls:CustomButton Command="{Binding AddNewTodoCommand}" 
                               Grid.Row="7"
                               Height="30"
                               Width="60"
                               Margin="12"
                               ToolTip="Zum Hinzufügen des Todos diesen Button klicken."
                               >
            <materialDesign:PackIcon Kind="Add" />
        </controls:CustomButton>
        <!--vorher: Style="{StaticResource ButtonStyle1}" explicit style
            jetzt: ButtonStyle.xaml: implicit style
            und vorher: Button -->
    </Grid>
</UserControl>
